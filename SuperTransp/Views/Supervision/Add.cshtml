@model SuperTransp.Models.SupervisionViewModel
@{
	Layout = "";
}
<!DOCTYPE HTML>
<html>
<head>
	<title>Agregar Supervisión</title>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
	<link rel="stylesheet" href="~/assets/css/main.css" />
	<noscript><link rel="stylesheet" href="~/assets/css/noscript.css" /></noscript>

	@* DropZone************************************************************************************ *@
    <link href="~/plugins/dropzone/dropzone.min.css" rel="stylesheet" />
	@* ************************************************************************************ *@

	@*DataTable************************************************************************@
	<link rel="stylesheet" href="~/datatable/css/bootstrap.css" />
	<link rel="stylesheet" href="~/datatable/css/dataTables.bootstrap4.min.css" />
	<link rel="stylesheet" href="~/datatable/css/responsive.bootstrap4.min.css" />
	@*************************************************************************************@
	<style>
		.is-invalid {
			border: 2px solid red;
			background-color: #ffe6e6;
		}

		#additionalFields {
			visibility: hidden;
			opacity: 0;
			height: 0;
			overflow: hidden;
			transition: opacity 0.3s ease-in-out, height 0.3s ease-in-out;
		}

		.custom-textarea {
			border: 2px solid;
		}

		.custom-textbox {
			border: 2px solid;
		}
	</style>
</head>
<body class="is-preload">
	@using (Html.BeginForm("Add", "Supervision", FormMethod.Post))
	{
		<!-- Wrapper -->
		<div id="wrapper">

			<!-- Header -->
			<header id="header">
				<div class="inner">

					<!-- Logo -->
					<a href="#" class="logo">
						<span class="symbol"><img src="~/images/logo_login.jpg" alt="" /></span><span class="title">SuperTransp</span>
						<br />
						<span class="title">@ViewBag.EmployeeName</span>
						<br />
						@if (TempData["SuccessMessage"] != null)
						{
							<div id="successMessage" class="alert alert-success">
								@TempData["SuccessMessage"]
							</div>
						}
					</a>
				</div>
				<!-- Nav -->
				<nav>
					<ul>
						<li><a href="#menu">Menu</a></li>
					</ul>
				</nav>
			</header>

			<!-- Menu -->
			<nav id="menu">
				<h2>Menu</h2>
				<ul>
					<li>@Html.ActionLink("Inicio", "Index", "Home")</li>
					<li>@Html.ActionLink("Agregar supervisión a otra línea", "PublicTransportGroupList", "Supervision")</li>
					<li>@Html.ActionLink("Salir", "Login", "Security")</li>
				</ul>
			</nav>

			<!-- Main -->
			<div id="main">
				<div class="inner">
					<!-- Form -->
					<section>
						<h1 style="color:#4cbece">Agregar supervisión</h1>
						<label>Linea: @Model.PublicTransportGroupRif @Model.PTGCompleteName</label><br />
						<label>Transportista: @Model.DriverIdentityDocument @Model.DriverFullName</label><br />
						<label>Socio: @Model.PartnerNumber</label>
						<br />
						<br />
						<br />
						<div class="row gtr-uniform">
							<div class="col-12">
								<strong>¿Posee vehículo?:</strong>
								@Html.HiddenFor(x => x.PTGCompleteName)
								@Html.HiddenFor(x => x.PublicTransportGroupId)
								@Html.HiddenFor(x => x.DriverIdentityDocument)
								@Html.HiddenFor(x => x.StateName)
								@Html.HiddenFor(x => x.DriverId)
								@Html.DropDownList("DriverWithVehicle", (IEnumerable<SelectListItem>)ViewBag.DriverWithVehicle, "Seleccione", new { @class = "form-control" })
							</div>
							<div class="row" id="additionalFields" style="visibility: hidden; opacity: 0; height: 0; overflow: hidden; transition: opacity 0.3s ease-in-out;">
								<div class="col-6">
									<strong>¿Transportista presente?:</strong>
									@Html.DropDownList("InPerson", (IEnumerable<SelectListItem>)ViewBag.InPerson, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<strong>¿Vehículo operativo?:</strong>
									@Html.DropDownList("WorkingVehicle", (IEnumerable<SelectListItem>)ViewBag.WorkingVehicle, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-12">
									<br />
									<strong>Placa:</strong>
									@Html.TextBoxFor(x => x.Plate, new { placeholder = "Número de placa", maxlength = "7", @class = "custom-textbox" })
								</div>
								<div class="col-3">
									<br />
									<strong>Año:</strong>
									@Html.DropDownList("Years", (IEnumerable<SelectListItem>)ViewBag.Years, "Seleccione el año", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Marca:</strong>
									<select id="MakeId" name="Make" class="form-control">
										<option value="">Seleccione la marca</option>
									</select>
								</div>
								<div class="col-3">
									<br />
									<strong>Modelo:</strong>
									<select id="ModelId" name="Model" class="form-control">
										<option value="">Seleccione el modelo</option>
									</select>
								</div>
								<div class="col-3">
									<br />
									<strong>Puestos:</strong>
									@Html.DropDownList("Passengers", (IEnumerable<SelectListItem>)ViewBag.Passengers, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Medida neumáticos:</strong>
									@Html.DropDownList("Rims", (IEnumerable<SelectListItem>)ViewBag.Rims, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Cantidad neumáticos:</strong>
									@Html.DropDownList("Wheels", (IEnumerable<SelectListItem>)ViewBag.Wheels, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Tipo combustible:</strong>
									@Html.DropDownList("FuelTypes", (IEnumerable<SelectListItem>)ViewBag.FuelTypes, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Capacidad tanque:</strong>
									@Html.DropDownList("TankCapacity", (IEnumerable<SelectListItem>)ViewBag.TankCapacity, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Tipo batería:</strong>
									@Html.DropDownList("Batteries", (IEnumerable<SelectListItem>)ViewBag.Batteries, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Cantidad baterias:</strong>
									@Html.DropDownList("NumberOfBatteries", (IEnumerable<SelectListItem>)ViewBag.NumberOfBatteries, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Tipo de aceite:</strong>
									@Html.DropDownList("MotorOil", (IEnumerable<SelectListItem>)ViewBag.MotorOil, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-3">
									<br />
									<strong>Litros:</strong>
									@Html.DropDownList("OilLitters", (IEnumerable<SelectListItem>)ViewBag.OilLitters, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Problema huella:</strong>
									@Html.DropDownList("FingerprintProblem", (IEnumerable<SelectListItem>)ViewBag.FingerprintProblem, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-6">
									<br />
									<strong>Tipo falla:</strong>
									@Html.DropDownList("FailureType", (IEnumerable<SelectListItem>)ViewBag.FailureType, "Seleccione", new { @class = "form-control" })
								</div>
								<div class="col-11">
									<br />
									<strong>Observaciones:</strong>
									@Html.TextAreaFor(x => x.Plate, new
										{
											@class = "custom-textarea",
											placeholder = "Observaciones",
											maxlength = "500"
										})
								</div>
								<div class="col-11">
									<br />
									<strong>Cargar imagenes:</strong>
									<div id="miDropzone" class="dropzone dz-clickable">
										<div class="dz-message">
											Arrastra tus imagenes aquí o haz clic para subirlas.
										</div>
									</div>
								</div>
								<div class="col-6">
									<br />
									<ul class="actions">
										<li><button type="submit" id="saveRequest" class="primary">Agregar supervisón</button></li>
									</ul>
								</div>
							</div>

						</div>
					</section>
					<section>
						<br />
						<br />
						<h4 style="color:#4cbece">Transportistas supervisados</h4>
						<br />
						<table id="inventory" class="table table-striped table-bordered dt-responsive nowrap" style="width:100%">
							<thead>
								<tr>
									<th>Nombre</th>
									<th>Cédula</th>
									<th># Socio</th>
									<th># Teléfono</th>
									<th>Modificar</th>
									<th>Eliminar</th>
								</tr>
							</thead>
							<tbody>
@* 								@foreach (var driver in ViewBag.Drivers)
								{
									<tr>

										<td>@driver.DriverFullName</td>
										<td>@driver.DriverIdentityDocument</td>
										<td>@driver.PartnerNumber</td>
										<td>@driver.DriverPhone</td>
										<td id="@driver.PublicTransportGroupId">
											@Html.ActionLink("Modificar", "Edit", "Driver", new { driverPublicTransportGroupId = driver.DriverPublicTransportGroupId }, new { @id = "btnEdit" })
										</td>
										<td id="@driver.DriverPublicTransportGroupId">
											<a href="javascript:void(0);"
											   id="btnDelete"
											   onclick="confirmDeletion('@Url.Action("Delete", "Driver", new { driverId = @driver.DriverId, publicTransportGroupId = @driver.PublicTransportGroupId, pTGCompleteName = @driver.PTGCompleteName })')">
												Eliminar
											</a>
										</td>
									</tr>
								} *@
							</tbody>
						</table>
					</section>
				</div>
			</div>
		</div>
	}
	<!-- Scripts -->
	<script src="~/assets/js/jquery.min.js"></script>
	<script src="~/assets/js/browser.min.js"></script>
	<script src="~/assets/js/breakpoints.min.js"></script>
	<script src="~/assets/js/util.js"></script>
	<script src="~/assets/js/main.js"></script>

	@* DropZone************************************************************************************ *@
		<script src="~/plugins/dropzone/dropzone.min.js"></script>
	@* ************************************************************************************ *@

	@*DataTable*******************************************@
	<script src="~/datatable/js/jquery-3.5.1.js"></script>
	<script src="~/datatable/js/jquery.dataTables.min.js"></script>
	<script src="~/datatable/js/dataTables.bootstrap4.js"></script>
	<script src="~/datatable/js/dataTables.responsive.min.js"></script>
	<script src="~/datatable/js/responsive.bootstrap4.min.js"></script>

	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}

	<script type="text/javascript">

		function confirmDeletion(url) {
			const userConfirmed = confirm("¿Está seguro de que desea eliminar este registro?");
			if (userConfirmed) {
				window.location.href = url;
			}
		}

		Dropzone.autoDiscover = false;
		var saveFilesUrl = '@Url.Action("SaveFiles", "Supervision")';
		const stateName = document.querySelector('[name="StateName"]').value;
		const driverIdentityDocument = document.querySelector('[name="DriverIdentityDocument"]').value;
		const partnerNumber = '@Model.PartnerNumber';
		const publicTransportGroupRif = '@Model.PublicTransportGroupRif';

		const dropzone = new Dropzone("#miDropzone", {
			url: saveFilesUrl,
			autoProcessQueue: true,
			paramName: "file",
			maxFilesize: 20,
			acceptedFiles: ".jpg,.png",
			dictDefaultMessage: "Arrastra tus imagenes aquí o haz clic para agregarlos.",
			addRemoveLinks: true,
			maxFiles: 1,

			params: {
				stateName: stateName,
				driverIdentityDocument: driverIdentityDocument,
				partnerNumber: partnerNumber,
				publicTransportGroupRif : publicTransportGroupRif
			},

			init: function () {
				this.on("maxfilesexceeded", function (file) {
					alert("Solo puedes agregar un archivo.");
					this.removeFile(file);
				});

				this.on("addedfile", function (file) {
					console.log("Archivo agregado:", file);
				});

				this.on("removedfile", function (file) {
					console.log("Archivo eliminado:", file);
				});

				this.on("success", function (file, response) {
					// Mostrar un alert cuando el archivo sea subido con éxito
					alert("Imagen se cargada correctamente.");
				});

				this.on("error", function (file, errorMessage) {
					// Manejar el caso de error
					alert("Hubo un error al subir la imagen: " + errorMessage);
				});
			}
		});

		document.addEventListener("DOMContentLoaded", function () {
			function handleInput(selector, transformFunction) {
				var inputElement = document.querySelector(selector);
				if (inputElement) {
					inputElement.addEventListener("input", function () {
						inputElement.value = transformFunction(inputElement.value);
					});

					inputElement.addEventListener("keydown", function (event) {
						if (event.key === "Tab" || event.key === " " || event.code === "Space") {
							event.preventDefault();
						}
					});
				}
			}

			handleInput("[name='Plate']", function (value) {
				return value.toUpperCase().replace(/\s+/g, ""); 
			});
		});

		// $("body").on("click", "#saveRequest", function (event) {
		// 	event.preventDefault();

		// 	// if (!isOkToSave()) {
		// 	// 	return false;
		// 	// }

		// 	if (!confirm("¿Está seguro de que desea actualizar los registros?")) {
		// 		return false;
		// 	}

		// 	$(this).closest("form").trigger("submit");
		// });

		function handleSaveRequest(event) {
			if (event) {
				event.preventDefault();
			}

			if (!isOkToSave()) {
				return false;
			}

			if (!confirm("¿Está seguro de que desea actualizar los registros?")) {
				return false;
			}

			$("#saveRequest").closest("form").trigger("submit");
		}

		// Evento click
		// $("body").on("click", "#saveRequest", function (event) {
		// 	handleSaveRequest(event);
		// });




		// $("form").on("submit", function (e) {
		// 	e.preventDefault();

		// 	if ($(this).valid()) {
		// 		var paramValue2 = $('#PublicTransportGroupId').val();
		// 		var paramValue4 = $('#PartnerNumber').val();
		// 		var checkExistingUrl = '@Url.Action("CheckExistingValues", "Driver")';
		// 		$.ajax({
		// 			url: checkExistingUrl,
		// 			data: {
		// 				paramValue2: paramValue2,
		// 				paramValue4: paramValue4
		// 			},
		// 			success: function (data) {
		// 				showMsg(data);
		// 			},
		// 			cache: false
		// 		});
		// 	}
		// });

		function isOkToSave() {
			let firstInvalidField = null;
			let message = "";

			if ($("#DriverWithVehicle").val() == "" && $("#DriverWithVehicle").val() != "0" && !firstInvalidField) {
				firstInvalidField = "#DriverWithVehicle";
				message = "Debe indicar si el transportista posee o no vehículo";
			}

			if($("#DriverWithVehicle option:selected").text() == "Sí")
			{
				if ($("#InPerson").val() == "" && !firstInvalidField) {
					firstInvalidField = "#InPerson";
					message = "Debe indicar si el transportista se presentó o no a la supervisión";
				}

				if ($("#WorkingVehicle").val() == "" && !firstInvalidField) {
					firstInvalidField = "#WorkingVehicle";
					message = "Debe indicar si el vehículo está operativo o no";
				}			

				if($("#Plate").val() == "" && !firstInvalidField){
					firstInvalidField = "#Plate";
					message = "Debe colocar la placa";
				}

				if ($("#Plate").val() != "" && !firstInvalidField) {
					const regexPlate = /^(?:[A-Z]{3}\d{3}|[A-Z]{2}\d{3}[A-Z]{2}|[A-Z]{2}\d{1}[A-Z]{1}\d{2}[A-Z]{1}|[0-9]{2}[A-Z]{2}[0-9]{1}[A-Z]{2}|[0-9]{2}[A-Z]{1}[0-9]{1}[A-Z]{1}[0-9]{1}[A-Z]{1}|[0-9]{2}[A-Z]{1}[0-9]{2}[A-Z]{2}|[0-9]{2}[A-Z]{2}[0-9]{2}[A-Z]{1}|[0-9]{3}[A-Z]{1}[0-9]{1}[A-Z]{1}[0-9]{1}|[0-9]{3}[A-Z]{2}[0-9]{1}[A-Z]{1}|[0-9]{4}[A-Z]{1}[0-9]{1}[A-Z]{1}|[0-9]{1}[A-Z]{1}[0-9]{1}[A-Z]{1}[0-9]{1}[A-Z]{2}|[0-9]{1}[A-Z]{1}[0-9]{1}[A-Z]{1}[0-9]{2}[A-Z]{1}|[0-9]{1}[A-Z]{1}[0-9]{3}[A-Z]{2}|[A-Z]{2}\d{4}[A-Z])$/;	
					const plateValue = $("#Plate").val();

					if (!regexPlate.test(plateValue)) {
						firstInvalidField = "#Plate";
						message = "La placa debe tener un formato válido";
					}
				}

				if ($("#Years").val() == "" && !firstInvalidField) {
					firstInvalidField = "#Years";
					message = "Debe seleccionar el año del vehículo";
				}

				if ($("#MakeId").val() == "" && !firstInvalidField) {
					firstInvalidField = "#MakeId";
					message = "Debe seleccionar la marca del vehículo";
				}

				if ($("#ModelId").val() == "" && !firstInvalidField) {
					firstInvalidField = "#ModelId";
					message = "Debe seleccionar el modelo del vehículo";
				}

				if ($("#Passengers").val() == "" && !firstInvalidField) {
					firstInvalidField = "#Passengers";
					message = "Debe seleccionar la cantidad de puestos";
				}

				if ($("#Rims").val() == "" && !firstInvalidField) {
					firstInvalidField = "#Rims";
					message = "Debe seleccionar el tipo de neumáticos";
				}

				if ($("#Wheels").val() == "" && !firstInvalidField) {
					firstInvalidField = "#Wheels";
					message = "Debe seleccionar la cantidad de neumáticos";
				}

				if ($("#FuelTypes").val() == "" && !firstInvalidField) {
					firstInvalidField = "#FuelTypes";
					message = "Debe seleccionar el tipo de combustible";
				}

				if ($("#TankCapacity").val() == "" && !firstInvalidField) {
					firstInvalidField = "#TankCapacity";
					message = "Debe seleccionar la capacidad del tanque de combustible";
				}

				if ($("#Batteries").val() == "" && !firstInvalidField) {
					firstInvalidField = "#Batteries";
					message = "Debe seleccionar el tipo de batería";
				}

				if ($("#NumberOfBatteries").val() == "" && !firstInvalidField) {
					firstInvalidField = "#NumberOfBatteries";
					message = "Debe seleccionar la cantidad de baterías";
				}

				if ($("#MotorOil").val() == "" && !firstInvalidField) {
					firstInvalidField = "#MotorOil";
					message = "Debe seleccionar el tipo de aceite";
				}

				if ($("#OilLitters").val() == "" && !firstInvalidField) {
					firstInvalidField = "#OilLitters";
					message = "Debe seleccionar los litros de aceite";
				}

				if ($("#FingerprintProblem").val() == "" && !firstInvalidField) {
					firstInvalidField = "#FingerprintProblem";
					message = "Debe seleccionar si tiene o no problemas con la huella";
				}

				if (firstInvalidField) {
					showAlert(message, firstInvalidField);
					return false;
				}
			}

			return true;
		}

		function showAlert(message, selector) {
			alert(message);
			highlightErrorField(selector);
			$(selector).focus();
		}

		function highlightErrorField(selector) {
			$(selector).addClass("is-invalid");
			$(selector).on("input", function () {
				$(this).removeClass("is-invalid");
			});

			$(selector)[0].scrollIntoView({ behavior: "smooth", block: "center" });
		}

		function showMsg(hasCurrentJob) {
			if (hasCurrentJob != "OK") {
				alert(hasCurrentJob);
				return false;
			} else {

				$("form").unbind('submit').submit();
			}
		}

		$(document).ready(function () {
			setTimeout(function(){
				$("#successMessage").fadeOut("slow");
			}, 2500);

			$('#DriverWithVehicle').change(function (event) {
				if ($(this).val() === "1") {
					$('#additionalFields').css({ visibility: 'visible', opacity: '1', height: 'auto', overflow: 'visible' });
				} else if($(this).val() === "0") {
					$('#additionalFields').css({ opacity: '0', visibility: 'hidden', height: '0', overflow: 'hidden' });
					//handleSaveRequest(event);
				}
			});

			$('#Years').change(function () {
				var yearId = $(this).val();
				var getSupervisionUrl = '@Url.Action("GetMakes", "Supervision")';

				$('#MakeId').empty().append('<option value="">Seleccione una marca</option>');

				if (yearId) {
					$.getJSON(getSupervisionUrl, { yearId: yearId }, function (data) {
						$.each(data, function (index, makes) {
							$('#MakeId').append($('<option>', {
								value: makes.vehicleDataId,
								text: makes.make
							}));
						});
					});
				}
			});

			$('#MakeId').change(function () {
				var yearId = $('#Years').val();
				var make = $('#MakeId option:selected').text();
				var getSupervisionUrl = '@Url.Action("GetModels", "Supervision")';

				$('#ModelId').empty().append('<option value="">Seleccione un modelo</option>');

				if (yearId) {
					$.getJSON(getSupervisionUrl, { yearId: yearId, make: make }, function (data) {
						$.each(data, function (index, models) {
							$('#ModelId').append($('<option>', {
								value: models.vehicleDataId,
								text: models.model
							}));
						});
					});
				}
			});

			$('#inventory').DataTable({
				"language": {
					"sProcessing":    "Procesando...",
					"sLengthMenu":    "Mostrar _MENU_ registros",
					"sZeroRecords":   "No se encontraron resultados",
					"sEmptyTable":    "Ningún dato disponible en esta tabla",
					"sInfo":          "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
					"sInfoEmpty":     "Mostrando registros del 0 al 0 de un total de 0 registros",
					"sInfoFiltered":  "(filtrado de un total de _MAX_ registros)",
					"sInfoPostFix":   "",
					"sSearch":        "Buscar:",
					"sUrl":           "",
					"sInfoThousands":  ",",
					"sLoadingRecords": "Cargando...",
					"oPaginate": {
						"sFirst":    "Primero",
						"sLast":    "Último",
						"sNext":    "Siguiente",
						"sPrevious": "Anterior"
					},
					"oAria": {
						"sSortAscending":  ": Activar para ordenar la columna de manera ascendente",
						"sSortDescending": ": Activar para ordenar la columna de manera descendente"
					}
				}
			});
		});
	</script>
</body>
</html>


